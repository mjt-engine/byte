{"version":3,"file":"idStringToIdBytes.js","sourceRoot":"","sources":["../src/idStringToIdBytes.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,oBAAoB,CAAC;AAE7C,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,EAAE,EAAE,EAAkB,EAAE,EAAE;IAC1D,MAAM,UAAU,GAAG,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACjC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;IAExC,wBAAwB;IACxB,6DAA6D;IAC7D,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,GAAG,UAAU,CAAC;IACvC,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;IAClC,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IACnD,YAAY;SACT,KAAK,CAAC,EAAE,CAAC;SACT,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SAC3B,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;QAChB,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAChB,CAAC,CAAC,CAAC;IACL,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC","sourcesContent":["import { Asserts } from \"@mjt-engine/assert\";\n\nexport const idStringToIdBytes = ({ id }: { id: string }) => {\n  const splitValue = id.split(\":\");\n  Asserts.assert(splitValue.length === 2);\n\n  // TODO only SHA FOR NOW\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [algorithm, base64] = splitValue;\n  const binaryString = atob(base64);\n  const result = new Uint8Array(binaryString.length);\n  binaryString\n    .split(\"\")\n    .map((s) => s.charCodeAt(0))\n    .forEach((b, i) => {\n      result[i] = b;\n    });\n  return result;\n};\n"]}