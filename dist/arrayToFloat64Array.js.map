{"version":3,"file":"arrayToFloat64Array.js","sourceRoot":"","sources":["../src/arrayToFloat64Array.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,GAAc,EAAgB,EAAE;IAClE,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;QAChC,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE,CAAC;YAC1B,OAAO,CAAC,CAAC,CAAC,CAAC;QACb,CAAC;QACD,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACrB,KAAK,CAAC,EAAE,CAAC;aACT,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IACH,OAAO,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC,CAAE,CAAC,CAAC;AACrE,CAAC,CAAC","sourcesContent":["export const arrayToFloat64Array = (arr: unknown[]): Float64Array => {\n  const numbers = arr.flatMap((v) => {\n    if (typeof v === \"number\") {\n      return [v];\n    }\n    return JSON.stringify(v)\n      .split(\"\")\n      .map((s) => s.codePointAt(0));\n  });\n  return new Float64Array(numbers.length).map((_, i) => numbers[i]!);\n};\n"]}