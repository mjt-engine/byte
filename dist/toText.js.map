{"version":3,"file":"toText.js","sourceRoot":"","sources":["../src/toText.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAEhD,MAAM,CAAC,MAAM,MAAM,GAAG,KAAK,EAAE,KAAe,EAAmB,EAAE;IAC/D,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;QAC9B,OAAO,KAAK,CAAC;IACf,CAAC;IACD,MAAM,GAAG,GAAG,MAAM,aAAa,CAAC,KAAK,CAAC,CAAC;IACvC,MAAM,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC;IAClC,OAAO,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAC7B,CAAC,CAAC","sourcesContent":["import type { ByteLike } from \"./type/ByteLike\";\nimport { toArrayBuffer } from \"./toArrayBuffer\";\n\nexport const toText = async (bytes: ByteLike): Promise<string> => {\n  if (typeof bytes === \"string\") {\n    return bytes;\n  }\n  const arr = await toArrayBuffer(bytes);\n  const decoder = new TextDecoder();\n  return decoder.decode(arr);\n};\n"]}